!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="dist",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var r=function(){function t(t,e,n,r){this.templateElement=document.getElementById(t),this.hostElement=document.getElementById(e);var o=document.importNode(this.templateElement.content,!0);this.element=o.firstElementChild,r&&(this.element.id=r),this.attach(n)}return t.prototype.attach=function(t){this.hostElement.insertAdjacentElement(t?"afterbegin":"beforeend",this.element)},t}();function o(t){var e=!0;return t.required&&(e=e&&0!==t.value.toString().trim().length),null!=t.minLength&&(e=e&&t.value.toString().trim().length>=t.minLength),null!=t.maxLength&&(e=e&&t.value.toString().trim().length<=t.maxLength),null!=t.minValue&&(e=e&&t.value>=t.minValue),null!=t.maxValue&&(e=e&&t.value<=t.maxValue),e}var i,s=function(){function t(){this.listeners=[],this.postitList=[]}return t.getInstance=function(){return this._Postits||(this._Postits=new t),this._Postits},t.prototype.addListener=function(t){this.listeners.push(t)},t.prototype.addPostit=function(t){var e=this.Validation(t);return e&&(this.postitList.push(t),this.updateListeners()),e},t.prototype.movePostit=function(t,e){var n=this.postitList.filter((function(e){return e.id===t}))[0];n&&n.status!==e&&(n.status=e,this.updateListeners())},t.prototype.updateListeners=function(){for(var t=0,e=this.listeners;t<e.length;t++){(0,e[t])(this.postitList.slice())}},t.prototype.Validation=function(t){var e={value:t.title,required:!1,minLength:0,maxLength:14},n={value:t.description,required:!0,minLength:1,maxLength:140},r={value:t.status,required:!0,minValue:0,maxValue:3};return!!(o(e)&&o(n)&&o(r))},t}().getInstance(),a=function(t,e,n){this.title=t.trim(),this.description=e.trim(),this.status=n,this.id=Math.random().toString()},u=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),l=function(t){function e(){var e=t.call(this,"project-input","app",!1,"user-input")||this;return e.titleInputElement=e.element.querySelector("#title"),e.descriptionInputElement=e.element.querySelector("#description"),e.valueInputElement=e.element.querySelector("#people"),e.configure(),e}return u(e,t),e.prototype.configure=function(){this.element.addEventListener("submit",this.submitHandler.bind(this))},e.prototype.submitHandler=function(t){t.preventDefault();var e=new a(this.titleInputElement.value,this.descriptionInputElement.value,+this.valueInputElement.value);s.addPostit(e)?(this.titleInputElement.value="",this.descriptionInputElement.value="",this.valueInputElement.value=""):alert("invlaid input: Invalid input")},e}(r);function p(t,e,n){var r=n.value;return{configurable:!0,get:function(){return r.bind(this)}}}var c,d=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),f=function(t,e,n,r){var o,i=arguments.length,s=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(i<3?o(s):i>3?o(e,n,s):o(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s},h=function(t){function e(e,n){var r=t.call(this,"post-it",e,!1,n.id)||this;return r.postit=n,r.configure(),r.renderContent(),r}return d(e,t),e.prototype.dragStartHandler=function(t){t.dataTransfer.setData("text/plain",this.postit.id),t.dataTransfer.effectAllowed="move"},e.prototype.dragEndHandler=function(t){console.log("DragEnd")},e.prototype.configure=function(){this.element.addEventListener("dragstart",this.dragStartHandler),this.element.addEventListener("dragend",this.dragEndHandler)},e.prototype.renderContent=function(){this.element.querySelector("h2").textContent=this.postit.title,this.element.querySelector("p").textContent=this.postit.description},f([p],e.prototype,"dragStartHandler",null),e}(r),m=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),v=function(t,e,n,r){var o,i=arguments.length,s=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(i<3?o(s):i>3?o(e,n,s):o(e,n))||s);return i>3&&s&&Object.defineProperty(e,n,s),s},y=function(t){function e(e){var n=t.call(this,"project-list","app",!1,e.toString().toLowerCase()+"-post-it")||this;return n.status=e,n.assignedPostits=[],n.configure(),n}return m(e,t),e.prototype.dragOverHandler=function(t){t.dataTransfer&&"text/plain"===t.dataTransfer.types[0]&&(t.preventDefault(),this.element.querySelector("ul").classList.add("droppable"))},e.prototype.dropHandler=function(t){var e=t.dataTransfer.getData("text/plain");s.movePostit(e,this.status),this.element.querySelector("ul").classList.remove("droppable")},e.prototype.dragLeaveHandler=function(t){this.element.querySelector("ul").classList.remove("droppable")},e.prototype.configure=function(){var t=this;this.element.querySelector("h2").textContent=this.status.toString(),this.element.addEventListener("dragover",this.dragOverHandler),this.element.addEventListener("dragleave",this.dragLeaveHandler),this.element.addEventListener("drop",this.dropHandler),s.addListener((function(e){var n=e.filter((function(e){return e.status===t.status}));t.assignedPostits=n,t.renderPostits()}))},e.prototype.renderPostits=function(){var t=this.status.toString()+"-post-it-list",e=document.getElementById(this.status.toString().toLocaleLowerCase()+"-post-it").querySelector("ul");e.innerHTML="",e.id=t;for(var n=0,r=this.assignedPostits;n<r.length;n++){var o=r[n];new h(this.element.querySelector("ul").id,o)}},v([p],e.prototype,"dragOverHandler",null),v([p],e.prototype,"dropHandler",null),v([p],e.prototype,"dragLeaveHandler",null),e}(r);!function(t){t[t.Unassigned=0]="Unassigned",t[t.Start=1]="Start",t[t.Continue=2]="Continue",t[t.Stop=3]="Stop"}(c||(c={})),new l,new y(c.Unassigned),new y(c.Start),new y(c.Continue),new y(c.Stop),console.log("hello friend")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,