"use strict";
//decorators
function validate(validatableInput) {
    var isValid = true;
    if (validatableInput.required) {
        isValid = isValid && validatableInput.value.toString().trim().length !== 0;
    }
    if (validatableInput.minLength != null) {
        isValid =
            isValid &&
                validatableInput.value.toString().trim().length >=
                    validatableInput.minLength;
    }
    if (validatableInput.maxLength != null) {
        isValid =
            isValid &&
                validatableInput.value.toString().trim().length <=
                    validatableInput.maxLength;
    }
    if (validatableInput.minValue != null) {
        isValid = isValid && validatableInput.value >= validatableInput.minValue;
    }
    if (validatableInput.maxValue != null) {
        isValid = isValid && validatableInput.value <= validatableInput.maxValue;
    }
    return isValid;
}
function autobind(_, _2, descriptor) {
    var originalMethod = descriptor.value;
    var adjDescriptor = {
        configurable: true,
        get: function () {
            var boundFn = originalMethod.bind(this);
            return boundFn;
        },
    };
    return adjDescriptor;
}
//make singleton
var ProjectInput = /** @class */ (function () {
    function ProjectInput() {
        this.hostElement = document.getElementById("app");
        this.formTemplate = document.getElementById("project-input");
        var formNode = document.importNode(this.formTemplate.content, true);
        this.formElement = formNode.firstElementChild;
        this.formElement.id = "user-input";
        this.titleInputElement = this.formElement.querySelector("#title");
        this.descriptionInputElement = this.formElement.querySelector("#description");
        this.valueInputElement = this.formElement.querySelector("#people");
        this.hostElement.appendChild(this.formElement);
        this.formElement.addEventListener("submit", this.submitHandler.bind(this));
        this.projectList = new ProjectList();
    }
    ProjectInput.prototype.submitHandler = function (event) {
        event.preventDefault();
        var validInput = this.projectList.AddProject(this.titleInputElement.value, this.descriptionInputElement.value, +this.valueInputElement.value);
        if (validInput[0]) {
            this.titleInputElement.value = "";
            this.descriptionInputElement.value = "";
            this.valueInputElement.value = "";
        }
        else {
            alert("invlaid input: " + validInput[1]);
        }
    };
    return ProjectInput;
}());
var ProjectList = /** @class */ (function () {
    function ProjectList() {
        this.hostElement = document.getElementById("app");
        this.projectListTemplate = document.getElementById("project-list");
        var projectListNode = document.importNode(this.projectListTemplate.content, true);
        this.projectListElement = projectListNode.firstElementChild;
        this.hostElement.appendChild(this.projectListElement);
        this.projectTemplate = document.getElementById("single-project");
    }
    ProjectList.prototype.AddProject = function (title, description, value) {
        var project = new Project(title, description, value);
        if (project.isValid) {
            var projectNode = document.importNode(this.projectTemplate.content, true);
            var projectElement = projectNode.firstElementChild;
            this.projectListElement.appendChild(projectElement);
        }
        return [project.isValid, project.validationMessage];
    };
    return ProjectList;
}());
var Project = /** @class */ (function () {
    function Project(t, d, v) {
        this.isValid = true;
        this.validationMessage = "Some of your input is invalid, try again.";
        this._title = t.trim();
        this._description = d.trim();
        this._value = v;
        var titleValidatable = {
            value: this._title,
            required: true,
            minLength: 1,
            maxLength: 50,
        };
        var descriptionValidatable = {
            value: this._description,
            required: false,
            minLength: 0,
            maxLength: 200,
        };
        var valueValidatable = {
            value: this._value,
            required: false,
            minValue: 0,
            maxValue: 99,
        };
        if (!validate(titleValidatable) ||
            !validate(descriptionValidatable) ||
            !validate(valueValidatable)) {
            this.isValid = false;
        }
    }
    return Project;
}());
var projectInput = new ProjectInput();
// const projectList = new ProjectList();
//# sourceMappingURL=data:application/json;base64,